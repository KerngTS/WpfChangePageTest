<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:WpfCustomControlLibrary1.Converters"
    xmlns:local="clr-namespace:WpfCustomControlLibrary1"
    xmlns:system="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries>
        <!--<ResourceDictionary Source="../Styles/VisiColor.xaml"/>-->
        <ResourceDictionary Source="pack://application:,,,/WpfCustomControlLibrary1;component/Styles/VisiColor.xaml" />
        <ResourceDictionary Source="pack://application:,,,/WpfCustomControlLibrary1;component/Styles/ControlStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <converter:VDrawerMarginOffsetConverter x:Key="DrawerMarginConverter" />

    <Style TargetType="{x:Type local:VWindow}">
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome GlassFrameThickness="0" />
            </Setter.Value>
        </Setter>
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="Topmost" Value="True" />
        <Setter Property="Background" Value="{DynamicResource SCBBackgroundColor}" />
        <Setter Property="TitleBackgroundBrush" Value="{DynamicResource SCBDockbarCaptionColor}" />
        <Setter Property="TitleForegroundBrush" Value="{DynamicResource SCBTextHighlightedNonFocusedBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:VWindow}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding TitleBackgroundBrush}"
                        BorderThickness="5,0,5,5"
                        UseLayoutRounding="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <DockPanel
                                Grid.Row="0"
                                Background="{TemplateBinding TitleBackgroundBrush}"
                                LastChildFill="False">
                                <TextBlock
                                    Margin="5,2,0,2"
                                    Padding="3"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    DockPanel.Dock="Left"
                                    Foreground="{TemplateBinding TitleForegroundBrush}"
                                    Text="{TemplateBinding Title}" />
                                <Button
                                    HorizontalAlignment="Right"
                                    Command="{x:Static SystemCommands.CloseWindowCommand}"
                                    DockPanel.Dock="Right"
                                    Style="{StaticResource VisiIconBtn}"
                                    WindowChrome.IsHitTestVisibleInChrome="True">
                                    <Path
                                        Width="10"
                                        Height="10"
                                        Data="M0.7,0 L5,4.3 L9.3,0 L10,0.7 L5.7,5 L10,9.3 L9.3,10 L5,5.7 L0.7,10 L0,9.3 L4.3,5 L0,0.7 z"
                                        Fill="{Binding (TextBlock.Foreground), RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                                        RenderTransformOrigin="0.5,0.5"
                                        Stretch="Uniform" />
                                </Button>
                            </DockPanel>

                            <AdornerDecorator Grid.Row="1">
                                <ContentPresenter ClipToBounds="True" />
                            </AdornerDecorator>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:VDrawerHost}">
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:VDrawerHost}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <!--  Main  -->
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <!--  Content  -->
                            <Border
                                x:Name="ContentPresenter"
                                Grid.Row="0"
                                Grid.RowSpan="3"
                                Grid.Column="0"
                                Grid.ColumnSpan="3"
                                Panel.ZIndex="0">
                                <ContentPresenter Content="{TemplateBinding Content}">
                                    <ContentPresenter.Tag>
                                        <system:Boolean>False</system:Boolean>
                                    </ContentPresenter.Tag>
                                </ContentPresenter>
                            </Border>
                            <!--  Mask  -->
                            <Border
                                x:Name="PART_DrawerMask"
                                Grid.Row="0"
                                Grid.RowSpan="3"
                                Grid.Column="0"
                                Grid.ColumnSpan="3"
                                Panel.ZIndex="1"
                                Background="Gray"
                                Focusable="False"
                                IsHitTestVisible="False"
                                Opacity="0">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <Trigger Property="Opacity" Value="0">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                            <!--  LeftDrawer  -->
                            <Border
                                x:Name="PART_LeftDrawer"
                                Grid.Row="0"
                                Grid.RowSpan="3"
                                Grid.Column="0"
                                Margin="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth, Converter={StaticResource DrawerMarginConverter}, ConverterParameter={x:Static Dock.Left}}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Stretch"
                                Panel.ZIndex="2"
                                Background="{TemplateBinding Background}"
                                Opacity="0">
                                <ContentPresenter Content="{TemplateBinding LeftDrawer}" />

                            </Border>
                            <!--  RightDrawer  -->
                            <Border
                                x:Name="PART_RightDrawer"
                                Grid.Row="0"
                                Grid.RowSpan="3"
                                Grid.Column="2"
                                Margin="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth, Converter={StaticResource DrawerMarginConverter}, ConverterParameter={x:Static Dock.Right}}"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Stretch"
                                Panel.ZIndex="2"
                                Background="{TemplateBinding Background}"
                                Opacity="0">
                                <ContentPresenter Content="{TemplateBinding RightDrawer}" />

                            </Border>
                            <!--  TopDrawer  -->
                            <Border
                                x:Name="PART_TopDrawer"
                                Grid.Row="0"
                                Grid.Column="0"
                                Grid.ColumnSpan="3"
                                Margin="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth, Converter={StaticResource DrawerMarginConverter}, ConverterParameter={x:Static Dock.Top}}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Top"
                                Panel.ZIndex="2"
                                Background="{TemplateBinding Background}"
                                Opacity="0">
                                <ContentPresenter Content="{TemplateBinding TopDrawer}" />
                            </Border>
                            <!--  BottomDrawer  -->
                            <Border
                                x:Name="PART_BottomDrawer"
                                Grid.Row="2"
                                Grid.Column="0"
                                Grid.ColumnSpan="3"
                                Margin="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth, Converter={StaticResource DrawerMarginConverter}, ConverterParameter={x:Static Dock.Bottom}}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Bottom"
                                Panel.ZIndex="2"
                                Background="{TemplateBinding Background}"
                                Opacity="0">
                                <ContentPresenter Content="{TemplateBinding BottomDrawer}" />
                            </Border>
                        </Grid>
                        <!--  VisualState  -->
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="LeftDrawerViewStates">
                                <VisualStateGroup.Transitions>
                                    <!--  Left  -->
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="LeftDrawerOpen">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_DrawerMask"
                                            Storyboard.TargetProperty="Opacity"
                                            To=".56"
                                            Duration="0" />
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="PART_DrawerMask" Storyboard.TargetProperty="IsHitTestVisible">
                                            <DiscreteBooleanKeyFrame KeyTime="0" Value="True" />
                                        </BooleanAnimationUsingKeyFrames>
                                        <!--<BooleanAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Tag">
                                            <DiscreteBooleanKeyFrame KeyTime="0" Value="False" />
                                        </BooleanAnimationUsingKeyFrames>-->
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_LeftDrawer"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0"
                                            To="1"
                                            Duration="0:0:0.2" />
                                        <ThicknessAnimation
                                            Storyboard.TargetName="PART_LeftDrawer"
                                            Storyboard.TargetProperty="Margin"
                                            To="0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="LeftDrawerClosed">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_DrawerMask"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0" />
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="PART_DrawerMask" Storyboard.TargetProperty="IsHitTestVisible">
                                            <DiscreteBooleanKeyFrame Value="False" />
                                        </BooleanAnimationUsingKeyFrames>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_LeftDrawer"
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0"
                                            Duration="0:0:0.2" />
                                        <ThicknessAnimation
                                            Storyboard.TargetName="PART_LeftDrawer"
                                            Storyboard.TargetProperty="Margin"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>

                            <VisualStateGroup x:Name="RightDrawerViewStates">
                                <VisualStateGroup.Transitions />
                                <VisualState x:Name="RightDrawerOpen">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_DrawerMask"
                                            Storyboard.TargetProperty="Opacity"
                                            To=".56"
                                            Duration="0" />
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="PART_DrawerMask" Storyboard.TargetProperty="IsHitTestVisible">
                                            <DiscreteBooleanKeyFrame KeyTime="0" Value="True" />
                                        </BooleanAnimationUsingKeyFrames>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_RightDrawer"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0"
                                            To="1"
                                            Duration="0:0:0.2" />
                                        <ThicknessAnimation
                                            Storyboard.TargetName="PART_RightDrawer"
                                            Storyboard.TargetProperty="Margin"
                                            To="0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="RightDrawerClosed">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_DrawerMask"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0" />
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="PART_DrawerMask" Storyboard.TargetProperty="IsHitTestVisible">
                                            <DiscreteBooleanKeyFrame Value="False" />
                                        </BooleanAnimationUsingKeyFrames>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_RightDrawer"
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0"
                                            Duration="0:0:0.2" />
                                        <ThicknessAnimation
                                            Storyboard.TargetName="PART_RightDrawer"
                                            Storyboard.TargetProperty="Margin"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:VDialogHost}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:VDialogHost}">
                    <Grid x:Name="DialogHostRoot" Focusable="False">
                        <Grid x:Name="PART_Dialog">
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform x:Name="GridScaleTransform" ScaleX="0" ScaleY="0" />
                                </TransformGroup>
                            </Grid.RenderTransform>
                            <Border
                                x:Name="PART_ContentElement"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Background="Transparent"
                                IsHitTestVisible="True">

                                <ContentPresenter
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding Content}" />
                            </Border>
                        </Grid>

                        <Grid
                            x:Name="PART_MaskCover"
                            Background="Transparent"
                            Focusable="False"
                            IsHitTestVisible="False"
                            Visibility="{Binding ElementName=ContentCoverBorder, Path=Visibility}">
                            <Grid.OpacityMask>
                                <VisualBrush Visual="{x:Reference ContentCoverBorder}" />
                            </Grid.OpacityMask>

                            <Border
                                x:Name="ContentCoverBorder"
                                Background="Gray"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                IsHitTestVisible="False"
                                Opacity="0">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <Trigger Property="Opacity" Value="0">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DialogStates">
                                <VisualState x:Name="Open">
                                    <Storyboard>
                                        <BooleanAnimationUsingKeyFrames
                                            Storyboard.TargetName="PART_Dialog"
                                            Storyboard.TargetProperty="IsOpen"
                                            Duration="0">
                                            <DiscreteBooleanKeyFrame KeyTime="0" Value="True" />
                                        </BooleanAnimationUsingKeyFrames>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ContentCoverBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            To=".56"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_ContentElement"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="GridScaleTransform"
                                            Storyboard.TargetProperty="ScaleX"
                                            To="1"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="GridScaleTransform"
                                            Storyboard.TargetProperty="ScaleY"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Closed">
                                    <Storyboard>
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="PART_Popup" Storyboard.TargetProperty="IsOpen">
                                            <DiscreteBooleanKeyFrame KeyTime="0" Value="False" />
                                        </BooleanAnimationUsingKeyFrames>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ContentCoverBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOpen" Value="True">
                            <Setter TargetName="PART_MaskCover" Property="IsHitTestVisible" Value="True" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:KFloatingTextBox}">
        <Setter Property="BorderBrush" Value="Red"/>
        <Setter Property="Background" Value="AliceBlue"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:KFloatingTextBox}">
                    <Border
                        x:Name="border"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0,0,0,1"
                        SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*" />
                                <RowDefinition Height="2*" />
                            </Grid.RowDefinitions>
                            <TextBlock
                                x:Name="FloatingEle"
                                Grid.Row="1"
                                Background="Transparent"
                                Foreground="Black"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Text="imya" />
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Grid.Row="1"
                                Focusable="false"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden" />

                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="EmptyStates">
                                <VisualState x:Name="Empty">
                                    <Storyboard TargetName="FloatingEle">
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="ScaleX"
                                            From="0.3"
                                            To="1"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="ScaleY"
                                            From="0.3"
                                            To="1"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            BeginTime="0:0:0.45"
                                            Storyboard.TargetProperty="ScaleX"
                                            To="0.3"
                                            Duration="0" />
                                        <DoubleAnimation
                                            BeginTime="0:0:0.45"
                                            Storyboard.TargetProperty="ScaleY"
                                            To="0.3"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NotEmpty">
                                    <Storyboard TargetName="FloatingEle">
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="ScaleX"
                                            To="0.3"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="ScaleY"
                                            To="0.3"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Opacity" Value="0.56" />
                        </Trigger>
                        <!--<Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.Focus.Border}" />
                        </Trigger>-->
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background" Value="Green"/>
                            <Setter Property="Grid.Row" Value="0"/>
                        </Trigger>
                        <Trigger Property="Text" Value="">
                            <Setter Property="Grid.Row" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
